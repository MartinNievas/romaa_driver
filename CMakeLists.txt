cmake_minimum_required(VERSION 3.8)
project(romaa_driver)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(nav_msgs REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(std_srvs REQUIRED)
find_package(tf2 REQUIRED)
find_package(tf2_ros REQUIRED)
find_package(tf2_geometry_msgs REQUIRED)

set(dependencies
    rclcpp
    nav_msgs
    geometry_msgs
    std_srvs
    tf2
    tf2_ros
    tf2_geometry_msgs
)

include_directories(include)

add_executable(romaa_driver
    src/romaa_driver_main.cpp
    src/romaa_driver/RomaaDriverNode.cpp
)

add_library(romaa_comm SHARED IMPORTED)
set_target_properties(romaa_comm
    PROPERTIES IMPORTED_LOCATION ${CMAKE_SOURCE_DIR}/include/romaa_comm/build/libromaa_comm.so)
ament_target_dependencies(romaa_driver ${dependencies})
target_link_libraries(romaa_driver romaa_comm)

install(TARGETS
    romaa_driver
    DESTINATION lib/${PROJECT_NAME}
)

install(DIRECTORY
    launch
    DESTINATION share/${PROJECT_NAME}
)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
